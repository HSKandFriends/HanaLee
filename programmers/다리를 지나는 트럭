//https://school.programmers.co.kr/learn/courses/30/lessons/42583

#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <algorithm>

using namespace std;

int solution(int bridge_length, int weight, vector<int> truck_weights) {
    int answer = 0; // 시간 초

    queue<int> bridge; //bridge 길이를 queue로 선언
    int i = 0;
    int sum = 0; //브릿지 위의 현 무게
    int ready = 0; //대기 중인 트럭 순서

    for (i = 0; i < bridge_length; i++) { //bridge 길이만큼 '0' 줄 세우기
        bridge.push(0);
    }
    while (1) {   //대기 중인 트럭이 모두 bridge를 지나갔을 때까지.
        if(ready == truck_weights.size()){  //마지막 트럭일 때
            answer += bridge_length;  //마지막 트럭이 지나는 시간 추가
            break;  
        }
        
        if ((sum + truck_weights[ready] - bridge.front()) <= weight) {  //T = 트럭 올리기 // F = 트럭 안 올리기
            //대기중인 트럭 남아 있으면
            bridge.push(truck_weights[ready]); //트럭 올리기
            sum = sum + truck_weights[ready]- bridge.front();  //브릿지에 + 새 트럭 무게 - 마지막 트럭 무게
            bridge.pop(); //마지막 트럭 빼기
            ready++; //다음 트럭 준비
            answer++; // 시간 ++
            
        }
        else // F = 트럭 안 올리기
        {
            bridge.push(0); // 트럭 안 올리기
            //cout<<bridge.front();
            sum = sum - bridge.front(); // 브릿지에 - 마지막 트럭 무게
            bridge.pop(); ////마지막 트럭 빼기
            answer++;
        }
    }
    return answer;
}
